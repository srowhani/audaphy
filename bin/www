#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('chat:server');
var http = require('http');
var duino = require('duino');

var server = http.createServer(app);

var port = parseInt(process.env.PORT, 10) || 3000;
app.set('port', port);

var board = new duino.Board();

board.on('ready', function(e){
  var lcd = new duino.LCD({
    board: board,
    pins: [8,9,4,5,6,7]
  });
  lcd.begin(16,2);
  var io = require('../io')(server, lcd);

  server.listen(port);
  server.on('error', onError);
  server.on('listening', onListening);


})
/**
 * Listen on provided port, on all network interfaces.
 */


/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  debug('Listening on port ' + server.address().port);
}
